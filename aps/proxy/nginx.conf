events {}

http {
      # Server 1: Client Application
    server {
        listen 81; # Listen on port 81 for the first server
        server_name client.localhost;

        location / {
            proxy_pass http://infra-client-1:5173; # Route to the client container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Server 2: API Services
    server {
        listen 82; # Listen on port 82 for the second server
        server_name api.localhost;

        # Auth Service
        location /api/auth/ {
            # Add CORS headers inside this location
           # add_header 'Access-Control-Allow-Origin' 'http://client.localhost:81'; # Replace '*' with 'http://client.localhost:81' for specific origin
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
          #  add_header 'Access-Control-Allow-Credentials' 'true';

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' 'http://client.localhost:81'; # Replace '*' with 'http://client.localhost:81' for specific origin
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' '0';
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            proxy_pass http://infra-auth-service-1:3002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Invoices Service
        location /api/invoices/ {
            # Add CORS headers inside this location
            add_header 'Access-Control-Allow-Origin' 'http://0.0.0.0:81'; # Replace '*' with 'http://client.localhost:81' for specific origin
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' 'http://0.0.0.0:81'; # Replace '*' with 'http://client.localhost:81' for specific origin
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' '0';
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            proxy_pass http://invoices-service:3003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Kafka Event Service
        location /api/events/ {
            proxy_pass http://kafka-event-service:3004; # Replace with your Kafka service container or endpoint
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}